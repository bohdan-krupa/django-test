[{"/Users/krp/Documents/Projects/django/users/users-front/src/index.js":"1","/Users/krp/Documents/Projects/django/users/users-front/src/App.js":"2","/Users/krp/Documents/Projects/django/users/users-front/src/reportWebVitals.js":"3","/Users/krp/Documents/Projects/django/users/users-front/src/components/Users.js":"4","/Users/krp/Documents/Projects/django/users/users-front/src/components/Header.js":"5","/Users/krp/Documents/Projects/django/users/users-front/src/components/Groups.js":"6"},{"size":500,"mtime":1610111292723,"results":"7","hashOfConfig":"8"},{"size":429,"mtime":1610331599543,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610111292724,"results":"10","hashOfConfig":"8"},{"size":8615,"mtime":1610397718179,"results":"11","hashOfConfig":"8"},{"size":345,"mtime":1610396532336,"results":"12","hashOfConfig":"8"},{"size":7834,"mtime":1610397702505,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1d0kqc1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/krp/Documents/Projects/django/users/users-front/src/index.js",[],["29","30"],"/Users/krp/Documents/Projects/django/users/users-front/src/App.js",[],"/Users/krp/Documents/Projects/django/users/users-front/src/reportWebVitals.js",[],"/Users/krp/Documents/Projects/django/users/users-front/src/components/Users.js",["31"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport $ from 'jquery'\nimport Header from './Header'\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\nimport Pagination from 'react-js-pagination'\nimport 'react-notifications/lib/notifications.css'\n\n\nfunction Users() {\n  const [users, setUsers] = useState([])\n  const [groups, setGroups] = useState([])\n  \n  const [totalCount, setTotalCount] = useState(0)\n  const [offset, setOffset] = useState(0)\n  const [perPage] = useState(5)\n  const [activePage, setActivePage] = useState(1)\n\n\n  let setData = offset => {\n    axios.get(`/api/user/?limit=${perPage}&offset=${offset}`).then(res => {\n      setUsers(res.data.results)\n      setTotalCount(res.data.count)\n\n      res.data.results.forEach((u, index) => {\n        $(`.edit-user-${index} #input-username-${index}`).val(u.username)\n        $(`.edit-user-${index} #input-group-${index}`).val(u.group.name)\n      })\n    })\n\n    axios.get('/api/group/').then(res => {\n      setGroups(res.data)\n    })\n  }\n\n  useEffect(setData, [])\n\n\n  let formatDataTime = dataTime => {\n    return `${dataTime.split('T')[0]} ${dataTime.split('T')[1].split('.')[0]}`\n  }\n\n  let editUser = (index, userId) => {\n    let username = $(`.edit-user-${index} #input-username-${index}`).val()\n    let groupValue = $(`.edit-user-${index} #input-group-${index}`).val()\n    let groupDataListOption = $(`#groups [value=\"${groupValue}\"]`)\n\n    if (username && groupDataListOption) {\n      let group = groupDataListOption.data('value')\n\n      axios.put(`/api/user/${userId}/`, {username, group}).then(res => {\n        $(`#edit-modal-${index}`).trigger('click')\n        setData(offset)\n        NotificationManager.success('Success')\n      }).catch(() => {\n        NotificationManager.error('Error')\n      })\n    }\n  }\n\n  let addUser = () => {\n    let username = $('.add-user #input-username').val()\n    let groupValue = $('.add-user #input-group').val()\n    let groupDataListOption = $(`#groups [value=\"${groupValue}\"]`)\n\n    if (username && groupDataListOption) {\n      let group = groupDataListOption.data('value')\n\n      if (group) {\n        axios.post('/api/user/', {username, group}).then(res => {\n          console.log(res)\n          $('#add-user-modal').trigger('click')\n          setData(offset)\n          NotificationManager.success('Success')\n\n          $('.add-user #input-username').val('')\n          $('.add-user #input-group').val('')\n        }).catch(() => {\n          NotificationManager.error('Error')\n        })\n      }\n    }\n  }\n\n  let deleteUser = (index, userId) => {\n    axios.delete(`/api/user/${userId}/`).then(res => {\n      console.log(res)\n      $(`#delete-modal-${index}`).trigger('click')\n      setData(offset)\n      NotificationManager.success('Success')\n    }).catch(() => {\n      NotificationManager.error('Error')\n    })\n  }\n\n  let handlePageChange = pageNumber => {\n    let _offset = Math.ceil((pageNumber - 1) * perPage)\n\n    setOffset(_offset)\n    setData(_offset)\n    setActivePage(pageNumber)\n  }\n\n  return (\n    <div>\n      <NotificationContainer/>\n\n      <Header />\n      <button type=\"button\" className=\"btn btn-dark add\" data-bs-toggle=\"modal\" data-bs-target=\"#add-user-modal\">Add User</button>\n      <div className=\"modal fade\" id=\"add-user-modal\" tabindex=\"-1\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Add user</h5>\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n\n            <div className=\"modal-body\">\n              <div className={`mb-3 add-user`}>\n                <label for=\"input-username\" className=\"form-label\">Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"input-username\" />\n                <br />\n                <label for=\"input-group\" className=\"form-label\">Group</label>\n                <input list=\"groups\" className=\"form-control\" id=\"input-group\" />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" className=\"btn btn-dark\" onClick={addUser}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div className=\"table-container\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Username</th>\n              <th scope=\"col\">Created</th>\n              <th scope=\"col\">Group</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((u, index) => (\n              <tr>\n                <th scope=\"row\">{u.id}</th>\n                <td>{u.username}</td>\n                <td>{formatDataTime(u.created)}</td>\n                <td>{u.group.name}</td>\n                <td>\n                  <div className=\"btn-group\">\n                    <button\n                      type=\"button\" className=\"btn btn-dark\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target={`#edit-modal-${index}`}\n                    >Edit</button>\n                    <button\n                      type=\"button\" className=\"btn btn-danger\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target={`#delete-modal-${index}`}\n                    >Delete</button>\n                  </div>\n                </td>\n\n                <div className=\"modal fade\" id={`edit-modal-${index}`} tabindex=\"-1\" aria-hidden=\"true\">\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Edit user with id {u.id}</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                      </div>\n\n                      <div className=\"modal-body\">\n                        <div className={`mb-3 edit-user-${index}`}>\n                          <label for={`input-username-${index}`} className=\"form-label\">Username</label>\n                          <input type=\"text\" className=\"form-control\" id={`input-username-${index}`} />\n                          <br />\n                          <label for={`input-group-${index}`} className=\"form-label\">Group</label>\n                          <input list=\"groups\" className=\"form-control\" id={`input-group-${index}`} />\n                        </div>\n                        <div className=\"modal-footer\">\n                          <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          <button type=\"button\" className=\"btn btn-dark\" onClick={() => editUser(index, u.id)}>Update</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"modal fade\" id={`delete-modal-${index}`} tabindex=\"-1\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                      <h5 className=\"modal-title\">Delete user {u.username}</h5>\n                      <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n\n                    <div className=\"modal-body\">\n                      <p>Are you sure?</p>\n                      <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-dark\" onClick={() => deleteUser(index, u.id)}>Yes</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <datalist id=\"groups\">\n        {groups.map(g => (\n          <option value={g.name} data-value={g.id}></option>\n        ))}\n      </datalist>\n      <Pagination\n        activePage={activePage}\n        itemsCountPerPage={perPage}\n        totalItemsCount={totalCount}\n        onChange={handlePageChange}\n        innerClass=\"pagination\"\n      />\n    </div>\n  )\n}\n\nexport default Users","/Users/krp/Documents/Projects/django/users/users-front/src/components/Header.js",[],"/Users/krp/Documents/Projects/django/users/users-front/src/components/Groups.js",["32"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport $ from 'jquery'\nimport Header from './Header'\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\nimport Pagination from 'react-js-pagination'\nimport 'react-notifications/lib/notifications.css'\n\n\nfunction Groups() {\n  const [groups, setGroups] = useState([])\n\n  const [totalCount, setTotalCount] = useState(0)\n  const [offset, setOffset] = useState(0)\n  const [perPage] = useState(5)\n  const [activePage, setActivePage] = useState(1)\n\n\n  let setData = offset => {\n    axios.get(`/api/group/?limit=${perPage}&offset=${offset}`).then(res => {\n      setGroups(res.data.results)\n      setTotalCount(res.data.count)\n\n      res.data.results.forEach((g, index) => {\n        $(`.edit-group-${index} #input-name-${index}`).val(g.name)\n        $(`.edit-group-${index} #input-desc-${index}`).val(g.description)\n      })\n    })\n  }\n\n  useEffect(setData, [])\n\n  let editGroup = (index, groupId) => {\n    let name = $(`.edit-group-${index} #input-name-${index}`).val()\n    let description = $(`.edit-group-${index} #input-desc-${index}`).val()\n\n    if (name && description) {\n      axios.put(`/api/group/${groupId}/`, {name, description}).then(() => {\n        $(`#edit-modal-${index}`).trigger('click')\n        setData(offset)\n        NotificationManager.success('Success')\n      }).catch(() => {\n        NotificationManager.error('Error')\n      })\n    }\n  }\n\n  let addGroup = () => {    \n    let name = $('.add-group #input-name').val()\n    let description = $('.add-group #input-desc').val()\n\n    if (name && description) {\n      axios.post('/api/group/', {name, description}).then(() => {\n        $('#add-group-modal').trigger('click')\n        setData(offset)\n        NotificationManager.success('Success')\n\n        $('.add-group #input-name').val('')\n        $('.add-group #input-desc').val('')\n      }).catch(() => {\n        NotificationManager.error('Error')\n      })\n    }\n  }\n\n  let deleteGroup = (index, groupId) => {\n    axios.delete(`/api/group/${groupId}/`).then(() => {\n      $(`#delete-modal-${index}`).trigger('click')\n      setData(offset)\n      NotificationManager.success('Success')\n    }).catch(() => {\n      NotificationManager.error('Error, maybe the user is assigned to this group')\n    })\n  }\n\n  let handlePageChange = pageNumber => {\n    let _offset = Math.ceil((pageNumber - 1) * perPage)\n\n    setOffset(_offset)\n    setData(_offset)\n    setActivePage(pageNumber)\n  }\n\n  return (\n    <div>\n      <NotificationContainer/>\n\n      <Header />\n      <button type=\"button\" className=\"btn btn-dark add\" data-bs-toggle=\"modal\" data-bs-target=\"#add-group-modal\">Add Group</button>\n      <div className=\"modal fade\" id=\"add-group-modal\" tabindex=\"-1\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Add group</h5>\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n\n            <div className=\"modal-body\">\n              <div className={`mb-3 add-group`}>\n                <label for=\"input-name\" className=\"form-label\">Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"input-name\" />\n                <br />\n                <label for=\"input-desc\" className=\"form-label\">Description</label>\n                <input list=\"groups\" className=\"form-control\" id=\"input-desc\" />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" className=\"btn btn-dark\" onClick={addGroup}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"table-container\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {groups.map((g, index) => (\n              <tr>\n                <th scope=\"row\">{g.id}</th>\n                <td>{g.name}</td>\n                <td>{g.description}</td>\n                <td>\n                  <div className=\"btn-group\">\n                    <button\n                      type=\"button\" className=\"btn btn-dark\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target={`#edit-modal-${index}`}\n                    >Edit</button>\n                    <button\n                      type=\"button\" className=\"btn btn-danger\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target={`#delete-modal-${index}`}\n                    >Delete</button>\n                  </div>\n                </td>\n\n                <div className=\"modal fade\" id={`edit-modal-${index}`} tabindex=\"-1\" aria-hidden=\"true\">\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Edit group with id {g.id}</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                      </div>\n\n                      <div className=\"modal-body\">\n                        <div className={`mb-3 edit-group-${index}`}>\n                          <label for={`input-name-${index}`} className=\"form-label\">Name</label>\n                          <input type=\"text\" className=\"form-control\" id={`input-name-${index}`} />\n                          <br />\n                          <label for={`input-desc-${index}`} className=\"form-label\">Description</label>\n                          <input list=\"groups\" className=\"form-control\" id={`input-desc-${index}`} />\n                        </div>\n                        <div className=\"modal-footer\">\n                          <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          <button type=\"button\" className=\"btn btn-dark\" onClick={() => editGroup(index, g.id)}>Update</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"modal fade\" id={`delete-modal-${index}`} tabindex=\"-1\" aria-hidden=\"true\">\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Delete group {g.name}</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                      </div>\n\n                      <div className=\"modal-body\">\n                        <p>Are you sure?</p>\n                        <div className=\"modal-footer\">\n                          <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          <button type=\"button\" className=\"btn btn-dark\" onClick={() => deleteGroup(index, g.id)}>Yes</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <Pagination\n        activePage={activePage}\n        itemsCountPerPage={perPage}\n        totalItemsCount={totalCount}\n        onChange={handlePageChange}\n        innerClass=\"pagination\"\n      />\n    </div>\n  )\n}\n\nexport default Groups",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":36,"column":22,"nodeType":"39","endLine":36,"endColumn":24,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":31,"column":22,"nodeType":"39","endLine":31,"endColumn":24,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'perPage'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"46","fix":"48"},"Update the dependencies array to be: [perPage]",{"range":"49","text":"50"},{"range":"51","text":"50"},[1078,1080],"[perPage]",[955,957]]